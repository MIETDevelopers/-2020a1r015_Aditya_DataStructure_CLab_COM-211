#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <limits.h>
struct stack
{
    int size;
    int top;
    int *arr;
};
bool isemp(struct stack *s)
{
    if (s->top == -1)
    {
        return true;
    }
    return false;
}
bool isful(struct stack *s)
{
    if (s->top == s->size - 1)
    {
        return true;
    }
    return false;
}
void push(struct stack *s, int element)
{
    if (isful(s))
    {
        printf("Stack is Full.\n");
    }
    else
    {
        s->top++;
        s->arr[s->top] = element;
    }
}
int pop(struct stack *s)
{
    int element_removed = INT_MIN;
    if (isemp(s))
    {
        printf("Stack is Empty.\n");
    }
    else
    {
        element_removed = s->arr[s->top];
        s->top--;
    }
    return element_removed;
}
void display(struct stack *s)
{
    if (isemp(s))
    {
        printf("Stack is Empty.\n");
    }
    else
    {

        printf("\n\n");
        for (int i = s->top; i >= 0; i--)
        {
            printf("|_%d_|\n", s->arr[i]);
        }
        printf("\n\n");
    }
}
void create(struct stack *s, int e)
{

    printf("NOW ENTER ELEMENTS\n");
    for (int i = 0; i < e; i++)
    {
        scanf("%d", &s->arr[i]);
        s->top++;
    }
}
int main()
{
    struct stack s1;
    printf("Enter size of stack:");
    scanf("%d", &s1.size);
    if (s1.size <= 0)
    {
        printf("invalid inpu\n");
        return 0;
    }
    s1.arr = (int *)malloc(sizeof(int) * s1.size);
    s1.top = -1;
    int n;
    printf("How many elements:");
    scanf("%d", &n);
    create(&s1, n);
    int c;
    do
    {
        printf("MENU:\n");
        printf("1.Push\n");
        printf("2.Pop\n");
        printf("3.Display\n");
        printf("4.EXIT\n");
        scanf("%d", &c);
        switch (c)
        {
        case 1:;
            int x;
            printf("ENTER ELEMENT:\n");
            scanf("%d", &x);
            push(&s1, x);
            break;

        case 2:;
            int temp = pop(&s1);
            if (temp != INT_MIN)
            {
                printf("Popped Element:%d\n", temp);
                printf("-----DONE-----\n");
            }
            else
            {
                printf("*****ERROR*****\n");
            }
            break;

        case 3:
            display(&s1);
            break;
        }
    } while (c < 4);

    return 0;
}
